lexer grammar Cql2Lexer;

fragment ALPHA : [A-Za-z];
fragment DIGIT : [0-9];

COMMA : ',';
PERIOD : '.';
COLON : ':';
UNDERSCORE : '_';
PLUS : '+';
MINUS : '-';
QUOTE : '\'';
SIGN : PLUS | MINUS;

OPEN_PAREN : '(';
CLOSE_PAREN : ')';

fragment INT
    : '0' | [1-9] DIGIT*
    ;

NUMBER_LITERAL
    : SIGN? INT
    | SIGN? INT? (PERIOD [0-9]*)
    ; 

STRING_LITERAL
    : QUOTE (~['] | QUOTE QUOTE)* QUOTE
    ;
    
BOOLEAN_LITERAL
    : 'TRUE' | 'FALSE'
    ;

COMPARISON_OPERATOR
    : EQ
    | LT
    | GT
    | NEQ
    | LTE
    | GTE
    ;

EQ : '=';
LT : '<';
GT : '>';
NEQ : LT GT;
LTE : LT EQ;
GTE : GT EQ;

LIKE : 'LIKE';
BETWEEN : 'BETWEEN';
IN : 'IN';
IS : 'IS';
NULL : 'NULL';

AND : 'AND';
OR : 'OR';
NOT : 'NOT';

DATE_LITERAL
    : 'DATE' OPEN_PAREN QUOTE FULL_DATE QUOTE CLOSE_PAREN
    ;

TIMESTAMP_LITERAL
    : 'TIMESTAMP' OPEN_PAREN QUOTE FULL_DATE 'T' TIME_HOUR COLON TIME_MINUTE COLON TIME_SECOND 'Z' QUOTE CLOSE_PAREN
    ;

FULL_DATE
    : DATE_YEAR MINUS DATE_MONTH MINUS DATE_DAY
    ;

DATE_YEAR
    : DIGIT DIGIT DIGIT DIGIT
    ;
    
DATE_MONTH
    : DIGIT DIGIT
    ;
    
DATE_DAY
    : DIGIT DIGIT
    ;

TIME_HOUR
    : DIGIT DIGIT
    ;

TIME_MINUTE
    : DIGIT DIGIT
    ;

TIME_SECOND
    : DIGIT DIGIT (PERIOD DIGIT+)?
    ;
    
POINT : 'POINT';
LINESTRING : 'LINESTRING';
POLYGON : 'POLYGON';
MULTIPOINT : 'MULTIPOINT';
MULTILINESTRING : 'MULTILINESTRING';
MULTIPOLYGON : 'MULTIPOLYGON';
GEOMETRYCOLLECTION : 'GEOMETRYCOLLECTION';
ENVELOPE : 'ENVELOPE';

SPATIAL_OPERATOR
    : 'S_CONTAINS'
    | 'S_CROSSES'
    | 'S_DISJOINT'
    | 'S_EQUALS'
    | 'S_INTERSECTS'
    | 'S_OVERLAPS'
    | 'S_TOUCHES'
    | 'S_WITHIN'
    ;

IDENTIFIER : ALPHA (IDENTIFIER_PART)* | '"' IDENTIFIER '"';
IDENTIFIER_PART : ALPHA | DIGIT | UNDERSCORE | COLON | PERIOD;

WS : [ \t\r\n]+ -> skip;